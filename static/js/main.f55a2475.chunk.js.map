{"version":3,"sources":["components/ContactForm/ContactForm.module.css","utils/transitions/pop.module.css","components/ContactList/ContactList.module.css","App.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-types.js","redux/contacts/contacts-reducer.js","redux/store.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","filterContact","items","createReducer","state","filter","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReducer","devTools","process","persistor","persistStore","getContacts","getFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","ContactForm","dispatch","useDispatch","useSelector","useState","setName","setNumber","handleChange","e","target","value","resetInput","className","s","form","onSubmit","preventDefault","find","contact","checkRepeatName","checkRepeatNumber","trim","checkEmptyQuery","test","checkValidNumber","toast","error","info","nameInput","type","onChange","placeholder","options","delimiter","blocks","numberInput","ctype","button","Filter","CSSTransition","in","length","timeout","classNames","popTransition","mountOnEnter","unmountOnExit","ContactList","visibleContacts","TransitionGroup","component","list","map","item","onClick","App","container","autoClose","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.f55a2475.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"name\":\"ContactForm_name__1yuhS\",\"number\":\"ContactForm_number__2Czl4\",\"nameInput\":\"ContactForm_nameInput__1yxA2\",\"numberInput\":\"ContactForm_numberInput__CBZzH\",\"button\":\"ContactForm_button__1MLZK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__1UEE9\",\"enterActive\":\"pop_enterActive__doTvn\",\"exit\":\"pop_exit__2kQB2\",\"exitActive\":\"pop_exitActive__1i14E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__3YsZK\",\"button\":\"ContactList_button__1RuFy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"contacts\":\"App_contacts__11wLB\"};","import shortid from 'shortid';\nimport { createAction } from '@reduxjs/toolkit';\nimport { ADD_CONTACT, DELETE_CONTACT, FILTER_CONTACT } from './contacts-types';\n\nexport const addContact = createAction(ADD_CONTACT, (name, number) => ({\n  payload: {\n    id: shortid.generate(),\n    name,\n    number,\n  },\n}));\nexport const deleteContact = createAction(DELETE_CONTACT);\nexport const filterContact = createAction(FILTER_CONTACT);\n","export const ADD_CONTACT = 'contacts/add';\nexport const DELETE_CONTACT = 'contacts/delete';\nexport const FILTER_CONTACT = 'contacts/filter';\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { addContact, deleteContact, filterContact } from './contacts-actions';\n\nconst items = createReducer([], {\n  [addContact]: (state, { payload }) => [...state, payload],\n  [deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [filterContact]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n};\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/contacts/contacts-actions';\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\nimport Cleave from 'cleave.js/react';\nimport { toast } from 'react-toastify';\nimport s from './ContactForm.module.css';\n\nfunction ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const checkRepeatName = name => {\n    return contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n  };\n\n  const checkRepeatNumber = number => {\n    return contacts.find(contact => contact.number === number);\n  };\n\n  const checkEmptyQuery = (name, number) => {\n    return name.trim() === '' || number.trim() === '';\n  };\n\n  const checkValidNumber = number => {\n    return !/\\d{3}[-]\\d{2}[-]\\d{2}/g.test(number);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (checkRepeatName(name)) {\n      toast(`ğŸ¤” ${name} is already in the phonebook.`);\n    } else if (checkRepeatNumber(number)) {\n      toast(`ğŸ¤” ${number} is already in the phonebook.`);\n    } else if (checkEmptyQuery(name, number)) {\n      toast.info(\"ğŸ˜± Enter the contact's name and number phone!\");\n    } else if (checkValidNumber(number)) {\n      toast.error('ğŸ’© Enter the correct number phone!');\n    } else {\n      dispatch(addContact(name, number));\n    }\n    resetInput();\n  };\n\n  const resetInput = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.name}>\n        Name\n        <input\n          className={s.nameInput}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Ivan Ivanov\"\n        />\n      </label>\n      <label className={s.number}>\n        Number\n        <Cleave\n          options={{ delimiter: '-', blocks: [3, 2, 2] }}\n          placeholder=\"111-11-11\"\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          className={s.numberInput}\n        />\n      </label>\n      <button ctype=\"submit\" className={s.button}>ADD CONTACT</button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { filterContact } from '../../redux/contacts/contacts-actions';\nimport {\n  getFilter,\n  getContacts,\n} from '../../redux/contacts/contacts-selectors';\nimport { CSSTransition } from 'react-transition-group';\nimport popTransition from '../../utils/transitions/pop.module.css';\n\n\nfunction Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n  const contacts = useSelector(getContacts);\n\n  return (\n    <CSSTransition\n      in={contacts.length > 0}\n      timeout={250}\n      classNames={popTransition}\n      mountOnEnter\n      unmountOnExit\n    >\n      <label>\n        Find contacts by name\n        <input\n          \n          type=\"text\"\n          value={filter}\n          onChange={e => dispatch(filterContact(e.target.value))}\n        />\n      </label>\n    </CSSTransition>\n  );\n}\n\nexport default Filter;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/contacts-actions';\nimport {\n  getVisibleContacts,\n  getContacts,\n} from '../../redux/contacts/contacts-selectors';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport s from './ContactList.module.css';\nimport popTransition from '../../utils/transitions/pop.module.css';\n\nfunction ContactList() {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(getVisibleContacts);\n  const contacts = useSelector(getContacts);\n\n  return (\n    <>\n      <CSSTransition\n        in={!contacts.length}\n        timeout={250}\n        classNames={popTransition}\n        mountOnEnter\n        unmountOnExit\n      >\n        <p>Your phonebook is empty. Please add contact.</p>\n      </CSSTransition>\n      <TransitionGroup component=\"ul\" className={s.list}>\n        {visibleContacts.map(({ id, name, number }) => (\n          <CSSTransition\n            key={id}\n            timeout={250}\n            mountOnEnter\n            unmountOnExit\n            classNames={popTransition}\n          >\n            <li className={s.item}>\n              <p>\n                {name}: {number}\n              </p>\n              <button\n                className={s.button}\n                type=\"button\"\n                onClick={() => dispatch(deleteContact(id))}\n              >DELETE</button>\n            </li>\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    </>\n  );\n}\n\nexport default ContactList;\n","import { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport s from './App.module.css'\n\nfunction App() {\n  return (\n    <div className={s.container}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2 className={s.contacts}>Contacts</h2>\n      <Filter />\n      <ContactList />\n      <ToastContainer autoClose={3700} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}